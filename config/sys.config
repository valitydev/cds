[
    {cds, [
        {ip, "::"},
        {port, 8022},
        {transport_opts, #{}},
        {protocol_opts, #{
            request_timeout => 60000
        }},
        {shutdown_timeout, 0},
        {scrypt_opts, {16384, 8, 1}},
        {keyring, #{
            url => <<"https://kds:8023">>,
            ssl_options => [
                {server_name_indication, "Test Server"},
                {verify, verify_peer},
                {cacertfile, "path/to/ca.crt"},
                {certfile, "path/to/clientcert.pem"},
                {keyfile, "path/to/private.key"},
                {password, "key password"}
            ],
            transport_opts => #{
                recv_timeout => 10000,
                connect_timeout => 1000
            },
            timeout => 10000
        }},
        {keyring_fetch_interval, 60000},
        {storage, cds_storage_ets},
        %%%
        % {storage, cds_storage_riak},
        % {cds_storage_riak, #{
        %     conn_params => #{
        %         host => "riakdb",
        %         port => 8087,
        %         options => [
        %             auto_reconnect,
        %             {keepalive, true}
        %         ]
        %     },
        %     timeout => 5000 % milliseconds
        % }},
        %%%
        % {storage, cds_storage_pg},
        % {cds_storage_pg, #{
        %     db => #{
        %         host => "postgres",
        %         port => 5432,
        %         database => "cds",
        %         username => "cds",
        %         password => "password"
        %     },
        %     pool => 10,
        %     vault_token_path => "/var/run/secrets/kubernetes.io/serviceaccount/token",
        %     vault_role => cds
        % }},
        {session_cleaning, #{
            enabled => true,
            interval => 3000,
            batch_size => 5000,
            session_lifetime => 3600
        }},
        {recrypting, #{
            enabled => true,
            interval => 3000,
            batch_size => 5000
        }},
        {health_check, #{
            disk => {erl_health, disk, ["/", 99]},
            memory => {erl_health, cg_memory, [99]},
            service => {erl_health, service, [<<"cds">>]},
            keyring => {cds_health, keyring, []}
        }}
    ]},

    {scoper, [
        {storage, scoper_storage_logger}
    ]},

    {kernel, [
        {logger_level, debug},
        {logger, [
            {handler, default, logger_std_h, #{
                config => #{
                    type => {file, "/var/log/cds/console.json"}
                },
                formatter =>
                    {logger_logstash_formatter, #{
                        message_redaction_regex_list => [
                            %% pan
                            "[0-9]{12,19}",
                            %% expiration date
                            "[0-9]{2}.[0-9]{2,4}",
                            %% cvv
                            "[0-9]{3,4}",
                            %% JWS and JWE compact representation
                            "^ey[JI]([a-zA-Z0-9_-]*.?){1,6}"
                        ]
                    }}
            }}
        ]}
    ]},

    {os_mon, [
        {disksup_posix_only, true}
    ]},

    {snowflake, [
        % 1 second
        {max_backward_clock_moving, 1000},
        {machine_id, hostname_hash}
    ]},

    {prometheus, [
        {collectors, [default]}
    ]},

    {canal, [
        {url, "http://vault"},
        {engine, kvv2}
    ]}
].
